AWSTemplateFormatVersion: '2010-09-09'
Resources:

#VPC作成
  MakeVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      Tags:
      - Key: Name
        Value: HandsonVPC-A

#IGW作成
  MakeIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Handson-igw-a

#IGWをVPCにアタッチ
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MakeVPC
      InternetGatewayId: !Ref MakeIGW

#ルートテーブル3つ作成
  MakeExternalRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: External-rt-a
  MakeInternalRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: internal-rt-a
  MakeManagementRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: Management-rt-a

#Externalサブネット作成,ルートテーブル関連付け、デフォゲ追加
  MakeExternalSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachIGW
    Properties:
      CidrBlock: 192.168.0.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: External-a
  ExternalSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MakeExternalSubnet
      RouteTableId: !Ref MakeExternalRT
  AddDGWExternalRT:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: !Ref MakeExternalRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MakeIGW

#Internalサブネット作成,ルートテーブル関連付け
  MakeInternalSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachIGW
    Properties:
      CidrBlock: 192.168.10.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: Internal-a
  InternalSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MakeInternalSubnet
      RouteTableId: !Ref MakeInternalRT

#Managementサブネット作成,ルートテーブル関連付け
  MakeManagementSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachIGW
    Properties:
      CidrBlock: 192.168.20.0/24
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref MakeVPC
      Tags:
      - Key: Name
        Value: Management-a
  ManagementSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MakeManagementSubnet
      RouteTableId: !Ref MakeManagementRT

#セキュリティグループ３つ作成
  MakeExternalSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: MakeVPC
    Properties:
      GroupName: External-sg-a
      GroupDescription: External-sg-a
      VpcId: !Ref MakeVPC
      SecurityGroupIngress: 
      -
        CidrIp: 202.19.222.3/32
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      -
        CidrIp: 202.19.222.3/32
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
      -
        CidrIp: 202.19.222.3/32
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
      -
        CidrIp: 54.250.155.218/32
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
  MakeInternalSG:
    DependsOn: MakeVPC
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Internal-sg-a
      GroupDescription: Internal-sg-a
      VpcId: !Ref MakeVPC
      SecurityGroupIngress: 
      -
        CidrIp: 0.0.0.0/0
        FromPort: 1
        ToPort: 65535
        IpProtocol: -1
  MakeManagementSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: MakeVPC
    Properties:
      GroupName: Management-sg-a
      GroupDescription: Management-sg-a
      VpcId: !Ref MakeVPC
      SecurityGroupIngress: 
      -
        CidrIp: 0.0.0.0/0
        FromPort: 1
        ToPort: 65535
        IpProtocol: -1
  AddExternalSGIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: MakeExternalSG
    Properties:
      GroupId: !Ref MakeExternalSG
      IpProtocol: -1
      FromPort: 1
      ToPort: 65535
      SourceSecurityGroupId: !Ref MakeExternalSG
  AddExternalSGIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: MakeExternalSG
    Properties:
      GroupId: !Ref MakeExternalSG
      IpProtocol: -1
      FromPort: 1
      ToPort: 65535
      SourceSecurityGroupId: !Ref MakeInternalSG

#ネットワークインターフェース４つ作成
  MakeEWCManagementInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref MakeManagementSubnet
      PrivateIpAddress: 192.168.20.20
      SourceDestCheck: false
      GroupSet:
      - !Ref MakeManagementSG
      Tags:
      - Key: Name
        Value: ewc-management-a
  MakeVSRXExternalInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref MakeExternalSubnet
      PrivateIpAddresses:
      - PrivateIpAddress: 192.168.0.30
        Primary: true
      - PrivateIpAddress: 192.168.0.31
        Primary: false
      SourceDestCheck: false
      GroupSet:
      - !Ref MakeExternalSG
      Tags:
      - Key: Name
        Value: vsrx-external-a
  MakeVSRXInternalInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref MakeInternalSubnet
      PrivateIpAddress: 192.168.10.30
      SourceDestCheck: false
      GroupSet:
      - !Ref MakeInternalSG
      Tags:
      - Key: Name
        Value: vsrx-internal-a
  MakeWebManagementInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref MakeManagementSubnet
      PrivateIpAddress: 192.168.20.40
      SourceDestCheck: false
      GroupSet:
      - !Ref MakeManagementSG
      Tags:
      - Key: Name
        Value: web-management-a

#インスタンス３つ起動
  LaunchEWC:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: us-east-1a
      ImageId: ami-3fb98445
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.medium
      KeyName: handson-key
      PrivateIpAddress: 192.168.0.20
      SecurityGroupIds: 
      - !Ref MakeExternalSG
      SourceDestCheck: false
      SubnetId: !Ref MakeExternalSubnet
      Tags: 
      - Key: Name
        Value: EWC-a
  LaunchVSRX:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: us-east-1a
      ImageId: ami-bbbe83c1
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: c4.xlarge
      KeyName: handson-key
      PrivateIpAddress: 192.168.20.30
      SecurityGroupIds: 
      - !Ref MakeManagementSG
      SourceDestCheck: false
      SubnetId: !Ref MakeManagementSubnet
      Tags: 
      - Key: Name
        Value: vSRX-a
  LaunchWeb:
    Type: AWS::EC2::Instance
    Properties: 
      AvailabilityZone: us-east-1a
      ImageId: ami-72c3fe08
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      KeyName: handson-key
      PrivateIpAddress: 192.168.10.40
      SecurityGroupIds: 
      - !Ref MakeInternalSG
      SourceDestCheck: false
      SubnetId: !Ref MakeInternalSubnet
      Tags: 
      - Key: Name
        Value: Web-a

#インスタンスにネットワークインターフェースアタッチ
  EWCManagementInterfaceAttach:
    Type: AWS::EC2::NetworkInterfaceAttachment
    DependsOn: EWCAssociateEIP
    Properties:
      DeleteOnTermination: false
      DeviceIndex: 1
      InstanceId: !Ref LaunchEWC
      NetworkInterfaceId: !Ref MakeEWCManagementInterface
  VSRXExtermalInterfaceAttach:
    Type: AWS::EC2::NetworkInterfaceAttachment
    Properties:
      DeleteOnTermination: false
      DeviceIndex: 1
      InstanceId: !Ref LaunchVSRX
      NetworkInterfaceId: !Ref MakeVSRXExternalInterface
  VSRXInternalInterfaceAttach:
    Type: AWS::EC2::NetworkInterfaceAttachment
    Properties:
      DeleteOnTermination: false
      DeviceIndex: 2
      InstanceId: !Ref LaunchVSRX
      NetworkInterfaceId: !Ref MakeVSRXInternalInterface
  WebManagementInterfaceAttach:
    Type: AWS::EC2::NetworkInterfaceAttachment
    Properties:
      DeleteOnTermination: false
      DeviceIndex: 1
      InstanceId: !Ref LaunchWeb
      NetworkInterfaceId: !Ref MakeWebManagementInterface

#EIP作成
  GenerateEIP1:
    Type: AWS::EC2::EIP
    DependsOn: LaunchEWC
    Properties:
      Domain: !Ref MakeVPC
  GenerateEIP2:
    DependsOn: LaunchVSRX
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref MakeVPC

#EIP割り当て
  EWCAssociateEIP:
    Type: AWS::EC2::EIPAssociation
    DependsOn: LaunchEWC
    Properties:
      AllocationId: !GetAtt GenerateEIP1.AllocationId
      InstanceId: !Ref LaunchEWC
      PrivateIpAddress: 192.168.0.20
  VSRXAssociateEIP:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt GenerateEIP2.AllocationId
      NetworkInterfaceId: !Ref MakeVSRXExternalInterface
      PrivateIpAddress: 192.168.0.31

#Ansible実行用インスタンス起動
  LaunchAnsible:
    Type: AWS::EC2::Instance
    DependsOn: LaunchEWC
    Properties: 
      AvailabilityZone: us-east-1a
      ImageId: ami-b3c6fbc9
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      KeyName: handson-key
      SourceDestCheck: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - !Ref MakeExternalSG
          SubnetId: !Ref MakeExternalSubnet
      Tags: 
      - Key: Name
        Value: Ansible-a

#Ansibleインスタンス用ネットワークインターフェース作成、アタッチ
  MakeAnsibleManagementInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref MakeManagementSubnet
      PrivateIpAddress: 192.168.20.10
      SourceDestCheck: false
      GroupSet:
      - !Ref MakeManagementSG
      Tags:
      - Key: Name
        Value: ansible-management-a

  AnsibleManagementInterfaceAttach:
    Type: AWS::EC2::NetworkInterfaceAttachment
    Properties:
      DeleteOnTermination: false
      DeviceIndex: 1
      InstanceId: !Ref LaunchAnsible
      NetworkInterfaceId: !Ref MakeAnsibleManagementInterface
